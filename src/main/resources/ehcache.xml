<?xml version="1.0" encoding="UTF-8"?>
<ehcache xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="ehcache.xsd" 
	updateCheck="true"
	monitoring="autodetect" 
	dynamicConfig="true">

	<diskStore path="java.io.tmpdir" />
	
	<cache name="codeCache" 
		maxEntriesLocalHeap="10000"
		maxEntriesLocalDisk="1000" 
		eternal="false" 
		diskSpoolBufferSizeMB="20"
		timeToIdleSeconds="300" 
		timeToLiveSeconds="600"
		memoryStoreEvictionPolicy="LFU" 
		transactionalMode="off">
		<persistence strategy="localTempSwap" />
	</cache>
	
	<cache name="menuCache" 
		maxEntriesLocalHeap="10000"
		maxEntriesLocalDisk="1000" 
		eternal="false" 
		diskSpoolBufferSizeMB="20"
		timeToIdleSeconds="300" 
		timeToLiveSeconds="600"
		memoryStoreEvictionPolicy="LFU" 
		transactionalMode="off">
		<persistence strategy="localTempSwap" />
	</cache>
	<!-- 
	name				: 코드에서 사용할 캐시 name	필수
	maxEntriesLocalHeap	: 메모리에 생성 될 최대 캐시 갯수	기본값:0
	maxEntriesLocalDisk	: 디스크에 생성 될 최대 캐시 갯수	기본값:0
	eternal				: 영속성 캐시 설정 (지워지는 캐시인지?) external = "true"이면, timeToIdleSecond, timeToLiveSeconds 설정이 무시됨. 기본값:false
	timeToIdleSecond	: 해당 초동안 캐시가 호출 되지 않으면 삭제	기본값:0
	timeToLiveSeconds	: 해당 초가 지나면 캐시가 삭제	기본값:0
	overflowToDisk		: 오버플로우 된 항목에 대해 disk에 저장할 지 여부	기본값:false
	diskPersistent		: 캐시를 disk에 저장하여, 서버 로드 시 캐시를 말아 둘지 설정	기본값:false
	diskExpiryThreadIntervalSeconds : Disk Expiry 스레드의 작업 수행 간격 설정	기본값:0
	memoryStoreEvictionPolicy  		: 캐시의 객체 수가 maxEntriesLocalHeap에 도달하면, 객체를 추가하고 제거하는 정책 설정 기본값:LRU
										LRU : 가장 오랫동안 호출 되지 않은 캐시를 삭제
										LFU : 호출 빈도가 가장 적은 캐시를 삭제
										FIFO : First In First Out, 캐시가 생성된 순서대로 가장 오래된 캐시를 삭제	
	 -->
</ehcache>